/*Simulation for ETM Thm 4.1*/
/**/
/*Theorem 4.1.

1. If the m-vector x is distributed as N(0,omega), then the quadratic
form x omega^-1 x is distributed as chisq(m);

2. If P is a projection matrix with rank r and z is an n--vector
that is distributed as N(0,I), then the quadratic form z`Pz is
distributed as chisq(r).*/

/*Constructing Chi-square from Normal Distribution usnig 11 Normal RVs*/

proc iml;
mu = 0;  sigma = 1;
%let Num_Nor_RV=11;
%let Num_chi_RV=1000;

X = j(&Num_Nor_RV,1);
*print x;
Quad = j(&Num_chi_RV,1); 

do k = 1 to &Num_chi_RV;
call randgen(X, "Normal", mu, sigma); 
*do i = 1 to &Num_Nor_RV; /*Wong unnecessary code*/
Quad[k,1] = (X`)*(1/sigma)*(X);       
*end;
end;

create MVN from Quad[colname='chi_rv'];  append from Quad;  close MVN;
quit;

ods graphics on;
proc univariate data=MVN;
   Histogram chi_rv / gamma(alpha=5 sigma=2);	/*Mean is k degrees of freedom, Variance = 2k*/
run;

/*You can use PROC UNIVARIATE to fit a chi-square distribution to the scaled sample variances.
Fitting a parametric distribution to data is accomplished with the HISTOGRAM statement. A
chi-square distribution with d degrees of freedom is equivalent to a Gamma(d/2 2) distribution.
Therefore, the following statements fit a chi-square distribution to the scaled variances. The resulting
histogram is shown in Figure 4.9.*/


/*Thm 4.1 Part 1: Using 5 Normal RVs. Note the covariance matrix is different*/

proc iml;
%let Num_Nor_RV=5;
%let Num_chi_RV=1000;

Quad = j(&Num_chi_RV,1); 

Mean = {0, 0, 0, 0, 0};
*Cov = {1 0 0 0 0,                  
       0 4 0 1 0,
       0 0 1 0 0, 
       0 1 0 3 0,
       0 0 0 0 1};
       *print cov;
Cov = toeplitz(5:1);    	/*http://blogs.sas.com/content/iml/2015/09/23/large-spd-matrix.html*/
*print T;
X = RandNormal(&Num_chi_RV, Mean, Cov);
*print x;

do k = 1 to &Num_chi_RV;
Quad[k,1] = (X[k,])*(inv(Cov))*((X[k,])`);       
end;

create MVN from Quad[colname='chi_rv'];  append from Quad;  close MVN;
quit;

ods graphics on;
proc univariate data=MVN;
   Histogram chi_rv / gamma(alpha=3 sigma=2);	
run;


/*Thm 4.1 Part 2*/

/*This example uses 11 Normal RVs to generate a Chi-square RV*/

proc iml;	
/*A invertible matrix generated by matlab*/
R={8.14723686393179	0	0	0	0	3	0	0	3	0	0,
9.0	9.57166948242946	0	0	0	0	0	0	0	0	0,
1.26986816293506	4.85375648722841	6.78735154857773	0	0	0	0	0	0	0	0,
9.13375856139019	8.00280468888800	7.57740130578334	6.94828622975817	0	0	0	0	0	0	0,
6.32359246225410	1.41886338627215	7.43132468124916	3.17099480060861	7.09364830858073	0	0	0	0	0	0,
0.975404049994095	4.21761282626275	3.92227019534168	9.50222048838355	7.54686681982361	7.51267059305653	0	0	0	0	0,
2.78498218867048	9.15735525189067	6.55477890177557	0.344460805029088	2.76025076998578	2.55095115459269	8.14284826068816	0	0	0	0,
5.46881519204984	7.92207329559554	1.71186687811562	4.38744359656398	6.79702676853675	5.05957051665142	2.43524968724989	9.17193663829810	0	0	0,
9.57506835434298	9.59492426392903	7.06046088019609	3.81558457093008	6.55098003973841	6.99076722656686	9.29263623187228	2.85839018820374	5.68823660872193	0	0,
9.64888535199277	6.55740699156587	0.318328463774207	7.65516788149002	1.62611735194631	8.90903252535799	3.49983765984809	7.57200229110721	4.69390641058206	6.89214503140008	0,
1.57613081677548	0.357116785741896	2.76922984960890	7.95199901137063	1.18997681558377	9.59291425205444	1.96595250431208	7.53729094278495	0.119020695012414	7.48151592823709	1.06652770180584};

*rank=ROUND(TRACE(GINV(r)*r));
*print r, rank;

/*Generate a 11x11 non-singular matrix*/										
K=CEIL(R*(INV(R`*R)) * R`);
rank=ROUND(TRACE(GINV(K)*K));
print K RANK;

%let Num_chi_RV=1000;
Quad = j(&Num_chi_RV,1); 
z=j(11,1);	

do b = 1 to &Num_chi_RV;								/*20x1 Normal RV vector*/
call randgen(z, 'NORMAL'); 
Quad[b,1] = (z`)*(K)*z ;
end;

create MVN from Quad[colname='chi_rv'];  append from Quad;  close MVN;
quit;

ods graphics on;
proc univariate data=MVN;
   Histogram chi_rv / gamma(alpha=5 sigma=2);	
run;






